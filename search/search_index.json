{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Template de Entrega","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"#nome","title":"Nome","text":"<ol> <li>Luzivania Bonfim</li> </ol> <p>Instru\u00e7\u00f5es</p> <p>Voc\u00eas devem utilizar este template como um bloco de notas para registrar o que foi feito e o que falta fazer. Voc\u00eas devem adicionar as informa\u00e7\u00f5es necess\u00e1rias. O template deve ser editado e atualizado a cada entrega, registrando assim a data de entrega e o que foi feito at\u00e9 o momento via Git.</p>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> Exercicio \u00e1rvore de decis\u00e3o</li> <li> Roteiro 1 - Data 23/02/2025</li> <li> Roteiro 2</li> <li> Roteiro 3</li> <li> Roteiro 4</li> <li> Projeto</li> </ul>"},{"location":"#diagramas","title":"Diagramas","text":"<p>Use o Mermaid para criar os diagramas de documenta\u00e7\u00e3o.</p> <p>Mermaid Live Editor</p> <pre><code>flowchart TD\n    Deployment:::orange --&gt;|defines| ReplicaSet\n    ReplicaSet --&gt;|manages| pod((Pod))\n    pod:::red --&gt;|runs| Container\n    Deployment --&gt;|scales| pod\n    Deployment --&gt;|updates| pod\n\n    Service:::orange --&gt;|exposes| pod\n\n    subgraph  \n        ConfigMap:::orange\n        Secret:::orange\n    end\n\n    ConfigMap --&gt; Deployment\n    Secret --&gt; Deployment\n    classDef red fill:#f55\n    classDef orange fill:#ffa500</code></pre>"},{"location":"#codigos","title":"C\u00f3digos","text":"De um arquivo remotoAnota\u00e7\u00f5es no c\u00f3digo main.yaml<pre><code>name: ci\non:\n  - push\n  - pull_request\n\n# Environment\nenv:\n  CI: true\n  PYTHON_VERSION: 3.12\n\n# Jobs to run\njobs:\n\n  # Build and deploy documentation site\n  deploy:\n    if: github.event_name != 'pull_request' &amp;&amp; github.ref == 'refs/heads/main'\n    runs-on: ubuntu-latest\n    steps:\n\n      # Checkout source form GitHub\n      - uses: actions/checkout@v4\n\n      # Install Python runtime and dependencies\n      - uses: actions/setup-python@v4\n        with:\n          python-version: ${{ env.PYTHON_VERSION }}\n\n      # pip\n      - run: |\n          pip install -r requirements.txt\n\n      # deploy\n      - run: |\n          mkdocs gh-deploy --force\n</code></pre> compose.yaml<pre><code>name: app\n\n    db:\n        image: postgres:17\n        environment:\n            POSTGRES_DB: ${POSTGRES_DB:-projeto} # (1)!\n            POSTGRES_USER: ${POSTGRES_USER:-projeto}\n            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-projeto}\n        ports:\n            - 5432:5432 #(2)!\n</code></pre> <ol> <li> <p>Caso a vari\u00e1vel de ambiente <code>POSTGRES_DB</code> n\u00e3o exista ou seja nula - n\u00e3o seja definida no arquivo <code>.env</code> - o valor padr\u00e3o ser\u00e1 <code>projeto</code>. Vide documenta\u00e7\u00e3o.</p> </li> <li> <p>Aqui \u00e9 feito um t\u00fanel da porta 5432 do container do banco de dados para a porta 5432 do host (no caso localhost). Em um ambiente de produ\u00e7\u00e3o, essa porta n\u00e3o deve ser exposta, pois ningu\u00e9m de fora do compose deveria acessar o banco de dados diretamente.</p> </li> </ol>"},{"location":"#exemplo-de-video","title":"Exemplo de v\u00eddeo","text":"<p>Lorem ipsum dolor sit amet</p>"},{"location":"#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"arvore-decisao/main/","title":"\u00c1rvore de Decis\u00e3o","text":""},{"location":"arvore-decisao/main/#exploracao-de-dados","title":"Explora\u00e7\u00e3o de dados","text":"<p>A vari\u00e1vel target foi criada a partir da coluna quality, classificando os vinhos em duas categorias:</p> <p>0 (ruim): vinhos com qualidade menor que 5;</p> <p>1 (bom): vinhos com qualidade maior ou igual a 5.</p> <p>No gr\u00e1fico abaixo, \u00e9 poss\u00edvel observar um forte desbalanceamento entre as classes. A grande maioria dos vinhos foi classificada como \u201cbons\u201d (1), enquanto apenas uma pequena parcela foi classificada como \u201cruins\u201d (0).</p> <p>Resumo do conjunto de dados Total de linhas: 6.497 Total de colunas: 12 Vari\u00e1vel de destino: quality (valores inteiros de 3 a 9) Formato de arquivo: CSV (UTF-8) Valores ausentes: Nenhum Duplicatas removidas: Sim</p> <p>1    6251 0     246</p>"},{"location":"arvore-decisao/main/#exploracao-dos-dados-grafico","title":"Explora\u00e7\u00e3o dos Dados Gr\u00e1fico","text":""},{"location":"arvore-decisao/main/#exploracao-dos-dados-codigo","title":"Explora\u00e7\u00e3o dos Dados C\u00f3digo","text":"<pre><code>import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport kagglehub\nimport os\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.tree import DecisionTreeClassifier, plot_tree\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n\nsns.set_style(\"whitegrid\")\nplt.rcParams[\"figure.figsize\"] = (10,6)\n\n# Baixar dataset\npath = kagglehub.dataset_download(\"saeedomranpour/red-and-white-wine-quality\")\nprint(\"Path to dataset files:\", path)\n\nprint(\"\\nArquivos dentro do dataset:\")\nprint(os.listdir(path))\n\n# Usar o arquivo cleaned\nfile_path = os.path.join(path, \"wine_quality_merged.csv\")\n\n# Carregar dataset\ndf = pd.read_csv(file_path, index_col=0)\nprint(\"\\nPrimeiros registros:\")\nprint(df.head())\n\nprint(\"\\nInforma\u00e7\u00f5es gerais:\")\nprint(df.info())\n\nprint(\"\\nDistribui\u00e7\u00e3o da vari\u00e1vel quality original:\")\nprint(df[\"quality\"].value_counts().sort_index())\n\n# ======================\n# Criar vari\u00e1vel alvo (target)\n# 1 = bom (quality &gt;= 5), 0 = ruim (quality &lt; 5)\n# ======================\ndf[\"target\"] = (df[\"quality\"] &gt;= 5).astype(int)\n\nprint(\"\\nDistribui\u00e7\u00e3o ap\u00f3s transforma\u00e7\u00e3o para target:\")\nprint(df[\"target\"].value_counts())\n\nsns.countplot(x=\"target\", data=df)\nplt.title(\"Distribui\u00e7\u00e3o da vari\u00e1vel alvo (0=ruim, 1=bom)\")\nplt.show()\n</code></pre>"},{"location":"arvore-decisao/main/#pre-processamento","title":"Pr\u00e9-processamento","text":"<p>1-Verifica se h\u00e1 valores nulos.</p> <p>2-Define features (X) e vari\u00e1vel alvo (y).</p> <p>3-Converte vari\u00e1veis categ\u00f3ricas em dummies (se tiver).</p> <p>4-Divide em treino (70%) e teste (30%).</p>"},{"location":"arvore-decisao/main/#codigo-pre-processamento","title":"C\u00f3digo Pr\u00e9-processamento","text":"<pre><code># Pr\u00e9-processamento\n\nprint(\"\\nValores ausentes:\")\nprint(df.isnull().sum())\n\n# Features: tirando quality e target\nX = df.drop([\"quality\", \"target\"], axis=1)\ny = df[\"target\"]\n\n# Se houver vari\u00e1veis categ\u00f3ricas\nX = pd.get_dummies(X, drop_first=True)\n\n# Divis\u00e3o treino/teste\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.3, random_state=42, stratify=y\n)\n\nprint(f\"\\nTamanho treino: {X_train.shape[0]} registros\")\nprint(f\"Tamanho teste: {X_test.shape[0]} registros\")\n\n# Converte vari\u00e1veis categ\u00f3ricas em dummies (se tiver).\n#pd.get_dummies(X) \u2192 cria colunas dummies para todas vari\u00e1veis categ\u00f3ricas.\n#drop_first=True \u2192 remove a primeira categoria de cada vari\u00e1vel (para evitar multicolinearidade, ou seja, colunas redundantes).\n# Divide em treino (70%) e teste (30%).\n</code></pre>"},{"location":"arvore-decisao/main/#explicacao-do-pre-processamento","title":"Explica\u00e7\u00e3o do Pr\u00e9-processamento","text":"<p>Verificou-se a aus\u00eancia de valores faltantes no dataset. As vari\u00e1veis independentes foram selecionadas, excluindo-se quality e target. As vari\u00e1veis categ\u00f3ricas foram codificadas por meio de dummies (one-hot encoding) para permitir a leitura pelo modelo. Por fim, o conjunto de dados foi dividido em treino (70%) e teste (30%), de forma estratificada para manter a propor\u00e7\u00e3o da vari\u00e1vel alvo</p>"},{"location":"arvore-decisao/main/#modelo-arvore-de-decisao","title":"Modelo \u00c1rvore de Decis\u00e3o","text":"<pre><code># Modelo \u00c1rvore de Decis\u00e3o\n\nmodel = DecisionTreeClassifier(random_state=42, max_depth=5)\nmodel.fit(X_train, y_train)\n\n# Avalia\u00e7\u00e3o\ny_pred = model.predict(X_test)\n\nprint(\"\\nAcur\u00e1cia:\", accuracy_score(y_test, y_pred))\nprint(\"\\nRelat\u00f3rio de Classifica\u00e7\u00e3o:\\n\", classification_report(y_test, y_pred))\n</code></pre>"},{"location":"arvore-decisao/main/#descricao","title":"Descri\u00e7\u00e3o","text":"<p>Treinamento do modelo- Cria uma \u00e1rvore de decis\u00e3o limitada a profundidade 5 (para n\u00e3o crescer demais) e treina com os dados de treino.</p> <p>Avalia\u00e7\u00e3o- az previs\u00f5es com os dados de teste e calcula m\u00e9tricas</p> <p>O modelo foi avaliado nos dados de teste com m\u00e9tricas de desempenho. A acur\u00e1cia foi de cerca de 96%, mostrando boa performance geral. A precis\u00e3o, recall e F1-score foram altos para vinhos bons, mas baixos para vinhos ruins, devido ao desbalanceamento do conjunto de dados.</p> <p>Acur\u00e1cia: mede a propor\u00e7\u00e3o total de acertos do modelo. No experimento, o modelo apresentou uma acur\u00e1cia de aproximadamente 96%, indicando bom desempenho geral.</p> <p>Precis\u00e3o: avalia, dentre as amostras previstas como \u201cboas\u201d, quantas realmente pertenciam a essa classe. O modelo mostrou alta precis\u00e3o para a classe majorit\u00e1ria (vinhos bons).</p> <p>Recall: mede a capacidade de identificar corretamente todos os casos da classe positiva. O recall tamb\u00e9m foi alto para vinhos bons, mas baixo para vinhos ruins, devido ao desbalanceamento da base.</p> <p>F1-Score: combina precis\u00e3o e recall em uma \u00fanica m\u00e9trica. Os valores foram satisfat\u00f3rios para vinhos bons, mas menores para vinhos ruins, refor\u00e7ando a dificuldade do modelo em prever a classe minorit\u00e1ria.</p>"},{"location":"arvore-decisao/main/#matriz-de-confusao","title":"Matriz de confus\u00e3o","text":""},{"location":"arvore-decisao/main/#codigo-da-matriz-de-confusao","title":"C\u00f3digo da Matriz de confus\u00e3o","text":"<pre><code># Matriz de confus\u00e3o\ncm = confusion_matrix(y_test, y_pred)\nsns.heatmap(cm, annot=True, fmt=\"d\", cmap=\"Blues\")\nplt.title(\"Matriz de Confus\u00e3o\")\nplt.xlabel(\"Predito\")\nplt.ylabel(\"Real\")\nplt.show()\n</code></pre>"},{"location":"arvore-decisao/main/#descricao-matriz","title":"Descri\u00e7\u00e3o Matriz","text":"<p>A matriz de confus\u00e3o mostra os seguintes resultados:</p> <p>Verdadeiro Negativo (TN) = 5 \u2192 vinhos ruins corretamente classificados como ruins.</p> <p>Falso Positivo (FP) = 69 \u2192 vinhos ruins incorretamente classificados como bons.</p> <p>Falso Negativo (FN) = 6 \u2192 vinhos bons incorretamente classificados como ruins.</p> <p>Verdadeiro Positivo (TP) = 1870 \u2192 vinhos bons corretamente classificados como bons.</p> <p>Isso indica que o modelo tem \u00f3timo desempenho na identifica\u00e7\u00e3o de vinhos bons (classe 1), conseguindo classificar corretamente a grande maioria desses casos. No entanto, o desempenho \u00e9 muito baixo para vinhos ruins (classe 0), j\u00e1 que praticamente n\u00e3o consegue reconhec\u00ea-los.</p> <p>Esse comportamento est\u00e1 diretamente relacionado ao desbalanceamento do conjunto de dados, onde os vinhos bons s\u00e3o muito mais numerosos que os ruins. Como consequ\u00eancia, o modelo \"aprende\" a priorizar a classe majorit\u00e1ria (bons) e tem dificuldade em identificar a classe minorit\u00e1ria (ruins).</p>"},{"location":"arvore-decisao/main/#visualizar-a-arvore","title":"Visualizar a \u00e1rvore","text":""},{"location":"arvore-decisao/main/#codigo-da-visualizacao-da-arvore","title":"C\u00f3digo da visualiza\u00e7\u00e3o da \u00e1rvore","text":"<pre><code># Visualizar a \u00e1rvore\nplt.figure(figsize=(18,10))\nplot_tree(model, feature_names=X.columns, class_names=[\"ruim\",\"bom\"], filled=True)\nplt.show()\n</code></pre>"},{"location":"arvore-decisao/main/#explicacao-da-arvore","title":"Explica\u00e7\u00e3o da \u00e1rvore","text":"<p>... A cor azul indica quando a decis\u00e3o est\u00e1 puxando mais para bom (1)</p> <p>A cor laranja indica quando a decis\u00e3o est\u00e1 puxando mais para ruim (0)</p>"},{"location":"arvore-decisao/main/#conclusao-final-relatorio-de-classificacao","title":"Conclus\u00e3o final : Relat\u00f3rio de Classifica\u00e7\u00e3o","text":"<p>Accuracy (Acur\u00e1cia): 96% \u2192 parece muito bom, mas \u00e9 enganador.</p> <p>Precision e Recall para classe 0 (ruim):</p> <p>Precision = 0.45 \u2192 Quando ele diz que \u00e9 ruim, s\u00f3 45% est\u00e3o realmente corretos.</p> <p>Recall = 0.07 \u2192 Ele s\u00f3 encontra 7% dos vinhos ruins!</p> <p>Classe 1 (bom): quase perfeito, acerta praticamente todos.</p> <p>Conclus\u00e3o: o modelo \u00e9 \u00f3timo para prever vinhos bons, mas p\u00e9ssimo para prever vinhos ruins.</p>"},{"location":"projeto/main/","title":"Projeto","text":"<p>Aqui vai toda a documenta\u00e7\u00e3o do projeto, incluindo o que j\u00e1 foi feito e o que falta fazer.</p>"},{"location":"roteiro1/main/","title":"Roteiro 1","text":""},{"location":"roteiro1/main/#objetivo","title":"Objetivo","text":"<p>Aqui vai o objetivo macro do roteiro. Por que estamos fazendo o que estamos fazendo?</p>"},{"location":"roteiro1/main/#montagem-do-roteiro","title":"Montagem do Roteiro","text":"<p>Os pontos \"tarefas\" s\u00e3o os passos que devem ser seguidos para a realiza\u00e7\u00e3o do roteiro. Eles devem ser claros e objetivos. Com evid\u00eancias claras de que foram realizados.</p>"},{"location":"roteiro1/main/#tarefa-1","title":"Tarefa 1","text":"<p>Instalando o MAAS:</p> sudo snap install maas --channel=3.5/Stable <p></p> <p>Dashboard do MAAS</p> <p>Conforme ilustrado acima, a tela inicial do MAAS apresenta um dashboard com informa\u00e7\u00f5es sobre o estado atual dos servidores gerenciados. O dashboard \u00e9 composto por diversos pain\u00e9is, cada um exibindo informa\u00e7\u00f5es sobre um aspecto espec\u00edfico do ambiente gerenciado. Os pain\u00e9is podem ser configurados e personalizados de acordo com as necessidades do usu\u00e1rio.</p>"},{"location":"roteiro1/main/#tarefa-2","title":"Tarefa 2","text":""},{"location":"roteiro1/main/#app","title":"App","text":""},{"location":"roteiro1/main/#tarefa-1_1","title":"Tarefa 1","text":""},{"location":"roteiro1/main/#tarefa-2_1","title":"Tarefa 2","text":"<p>Exemplo de diagrama</p> <pre><code>architecture-beta\n    group api(cloud)[API]\n\n    service db(database)[Database] in api\n    service disk1(disk)[Storage] in api\n    service disk2(disk)[Storage] in api\n    service server(server)[Server] in api\n\n    db:L -- R:server\n    disk1:T -- B:server\n    disk2:T -- B:db</code></pre> <p>Mermaid</p>"},{"location":"roteiro1/main/#questionario-projeto-ou-plano","title":"Question\u00e1rio, Projeto ou Plano","text":"<p>Esse se\u00e7\u00e3o deve ser preenchida apenas se houver demanda do roteiro.</p>"},{"location":"roteiro1/main/#discussoes","title":"Discuss\u00f5es","text":"<p>Quais as dificuldades encontradas? O que foi mais f\u00e1cil? O que foi mais dif\u00edcil?</p>"},{"location":"roteiro1/main/#conclusao","title":"Conclus\u00e3o","text":"<p>O que foi poss\u00edvel concluir com a realiza\u00e7\u00e3o do roteiro?</p>"},{"location":"roteiro2/main/","title":"Roteiro 2","text":""},{"location":"roteiro2/main/#diagrama-de-classes-do-banco","title":"Diagrama de Classes do Banco","text":"<pre><code>classDiagram\n    class Conta {\n        - String id\n        # double saldo\n        - Cliente cliente\n        + sacar(double valor)\n        + depositar(double valor)\n    }\n    class Cliente {\n        - String id\n        - String nome\n        - List&lt;Conta&gt; contas\n    }\n    class PessoaFisica {\n        - String cpf\n    }\n    class PessoaJuridica {\n        - String cnpj\n    }\n    class ContaCorrente {\n        - double limite\n        + sacar(double valor)\n    }\n    class ContaPoupanca {\n        + sacar(double valor)\n    }\n    Conta *-- Cliente\n    Conta &lt;|-- ContaCorrente\n    Conta &lt;|-- ContaPoupanca\n    Cliente &lt;|-- PessoaFisica\n    Cliente &lt;|-- PessoaJuridica</code></pre>"},{"location":"roteiro2/main/#diagrama-de-sequencia-de-autorizacao","title":"Diagrama de Seq\u00fc\u00eancia de Autoriza\u00e7\u00e3o","text":"<pre><code>sequenceDiagram\n  autonumber\n  actor User\n  User-&gt;&gt;Auth Service: request with token\n  Auth Service-&gt;&gt;Auth Service: decodes the token and extracts claims\n  Auth Service-&gt;&gt;Auth Service: verifies permissions\n  critical allowed\n    Auth Service-&gt;&gt;Secured Resource: authorizes the request\n    Secured Resource-&gt;&gt;User: returns the response\n  option denied\n    Auth Service--&gt;&gt;User: unauthorized message\n  end  </code></pre>"},{"location":"roteiro3/main/","title":"Roteiro 3","text":"<p>Running the code below in Browser (Woooooowwwwww!!!!!!). <sup>1</sup></p> <p> Editor (session: default) Run <pre>import ssl\nimport pandas as pd\n\ndf = pd.DataFrame()\ndf['AAPL'] = pd.Series([1, 2, 3])\ndf['MSFT'] = pd.Series([4, 5, 6])\ndf['GOOGL'] = pd.Series([7, 8, 9])\n\nprint(df)\n</pre> Output Clear <pre></pre> </p> <ol> <li> <p>Pyodide \u21a9</p> </li> </ol>"},{"location":"roteiro4/main/","title":"Roteiro 4","text":"<p>Se chegou aqui, \u00e9 porque voc\u00ea est\u00e1 interessado em saber mais. Logo, de brinde, como rodar um c\u00f3digo <code>Python</code> aqui.</p> 2025-08-26T00:00:25.149823 image/svg+xml Matplotlib v3.10.5, https://matplotlib.org/ 2025-08-26T00:00:26.230433 image/svg+xml Matplotlib v3.10.5, https://matplotlib.org/ <p>Markdown-exec \u00e9 uma extens\u00e3o do Markdown que permite executar c\u00f3digo Python diretamente no Markdown. Isso \u00e9 \u00fatil para gerar resultados din\u00e2micos ou executar scripts de forma interativa.</p>"}]}